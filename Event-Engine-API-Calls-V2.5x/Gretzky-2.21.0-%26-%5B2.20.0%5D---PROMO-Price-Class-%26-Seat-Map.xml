<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="f8f71e92-7c7b-436d-b063-b65c9c688097" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Gretzky 2.21.0 &amp; [2.20.0]   PROMO-Price Class &amp; Seat Map" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="f8f71e92-7c7b-436d-b063-b65c9c688097fileName">Gretzky-2.21.0-%26-%5B2.20.0%5D---PROMO-Price-Class-%26-Seat-Map</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="manualTestStep" name=">> Run Price_Class Update Script If Needed" id="7ce7664b-e551-40d5-9779-91af15b09d1b"><con:description>
Price class update script
---------------------------
This below Script will update the price class for all rocket events in Event Engine Database. 
- Script reads a mapping excel[ ee-projectfolder/excel/rocket_event_class.xls ] 
- the add an object "price_class" to events collection 
- and add value according to excel file 

[EE-Project Folder Terminal :  ] node db/seed/seed_price_class_in_events.js
</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Validate All Rocket Events Has Price_Class Attribute" id="0090f065-e5e7-4a2c-aad4-dd891f58841f"><con:settings/><con:config service="Event Engine" methodName="v2_5_events_all" resourcePath="/v2.5/events" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Validate All Rocket Events Has Price_Class Attribute" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer e0554a52bf12b176ae14a9f85b60fcb2" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="18d105f8-52d8-44d1-9026-7a87a4e1dd5c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8546cb1-a42f-4a8f-9920-b7879a47e1ff" name="Match content of [status]"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid Result is Not Empty - > Result []" id="619a109e-d82d-4a1a-8236-5d3de9d41464"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def result = jsonSlurper.results
	log.info result.size

	def totalelement = result.size
	
	//def Events_With_Arts_and_theater_Category = 0


	//category.each //Loop Through the Targeted Array Item 	
	//{
		//log.info it.name.toString()
		//def value = it.name.toString()
		//if(value.contains('Arts&amp;Theater'))
		//{
			//Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		//}
	//}


	assert totalelement != 0 : "Result is Empty Result[]"</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="51741595-5749-4ef9-a39d-d0bde4b2cce4" name="Valid All Result Contains Price_Class Object"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Cut &amp; Store all results[]  array inside a variable 
def allResults= jsonSlurper.results

log.info "Total Result[] in Response : " +  allResults.size()
log.info "Total {price_class} found in Response : " +  allResults.count{ it.price_class }


assert allResults.size() == allResults.count{ it.price_class } : "{Price_class} is not found in All Result[] .. "







//def map = [user: 'mrhaki', city: 'Tilburg', age: 37]
//log.info map.count { key, value -> key.size() == 3 }


//log.info jsonSlurper.count("results")
//log.info jsonSlurper.results.count()

//log.info $['results'][*]

//premimum.each
//{
	//log.info it.toString()
	//def value = it.price_class.toString()

	//if(value.contains('start_date'))
	//{

		//StartDateFound = true
		//return false
	//}
	
//}

//assert StartDateFound == false : "Preferred Seating -> Start Date Shoule Not be part of Response "
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="size" value="1000"/>
  <con:entry key="name" value="rocket"/>
  <con:entry key="availability_percentage" value=""/>
</con:parameters><con:parameterOrder><con:entry>artist_id</con:entry><con:entry>category</con:entry><con:entry>city</con:entry><con:entry>day_type</con:entry><con:entry>end_date</con:entry><con:entry>group</con:entry><con:entry>lat</con:entry><con:entry>long</con:entry><con:entry>min_price</con:entry><con:entry>max_price</con:entry><con:entry>name</con:entry><con:entry>promo_code</con:entry><con:entry>page</con:entry><con:entry>promotion</con:entry><con:entry>radius</con:entry><con:entry>start_date</con:entry><con:entry>sales_status</con:entry><con:entry>sales_start_date</con:entry><con:entry>sales_end_date</con:entry><con:entry>sort_by</con:entry><con:entry>size</con:entry><con:entry>sub_category</con:entry><con:entry>status</con:entry><con:entry>tag</con:entry><con:entry>unit</con:entry><con:entry>venue_id</con:entry><con:entry>venue</con:entry><con:entry>availability_percentage</con:entry><con:entry>created_after</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="4bbf54a9-beeb-4393-bb8f-61e363c47665"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="manualTestStep" name=">> Promo Code [test_promo] with No Price-Template" id="00a6c08b-5302-4337-bae6-23a3c51724c0"><con:description>
Given I Create a Sample Price Template 
And I Add a Price Class [ example : D] Into sample Price Template
And I Add Some Min (10)/Max (30) Price for this Price Class
And I Save the Price Template 


Scenario : Promo-Code Without Price Template 
================================
Given I Create A Promo Code Name "Test_Promo"   [ Delete it Before you create : db.promocodes.remove({title: /test_promo/})  ] 
And I Dont Select Any "Price Template" for the Fist Time 
And I Add One Roket Event to this Promo code 
And I save the Promo Code
When I Run the  Ready API Test Below 
    ** [ Validate - Promo_Code/{TEST_PROMO}/Events?size=1000Promo_Code/{TEST_PROMO}/Events?size=1000 ]

Then I Validate that one rocket event exist in response and the "is_promoted" attribute value is true
And I Validate All Result[0] Array Contains "Price" : Empty

</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Validate - Promo_Code/{TEST_PROMO}/Events?size=1000 &amp; Min/Max is coming from Inventory" id="82301664-e2bb-44ee-b72f-dae0f1207638"><con:settings/><con:config service="Event Engine" resourcePath="/v2.5/promo_codes/{promocode-name}/events" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Validate - Promo_Code/{TEST_PROMO}/Events?size=1000 &amp; Min/Max is coming from Inventory" id="87f9a1d3-b12d-4c3d-a0b5-2c2cea191b17" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://localhost:8088/</con:endpoint><con:request/><con:originalUri>https://qa-api.msg.com/v2.5/promo_codes/TEST-PROMOCODE001/events</con:originalUri><con:assertion type="JsonPath Match" name="Match content of [status]" id="4c37cb2a-83b9-4089-9f4a-1ab98c11d2dc"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes is 200" id="ed681a37-708e-4141-a336-561bd69154ee"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="44c8bafa-5e8b-4326-aac1-e6f89725ff4e" name="Match content of [message]"><con:configuration><path>$['message']</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid Result is Not Empty - > Result []" id="f6d778bb-0cc2-48b3-9660-2a653617330e"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def result = jsonSlurper.results
	log.info result.size

	def totalelement = result.size
	
	//def Events_With_Arts_and_theater_Category = 0


	//category.each //Loop Through the Targeted Array Item 	
	//{
		//log.info it.name.toString()
		//def value = it.name.toString()
		//if(value.contains('Arts&amp;Theater'))
		//{
			//Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		//}
	//}


	assert totalelement != 0 : "Result is Empty Result[]"</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ec793585-e67e-4abe-9e5e-0010bc2b4b31" name="Because [ ID: 3C0054B70E831D67 ] Selected for this Promo-code it should return Is_promoted=true"><con:configuration><path>$['results'][0]['is_promoted']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2b1c15cb-d0e8-4aec-b7c7-66a97dccc31f" name="Because no price Template Applied [ ID: 3C0054B70E831D67 ] [min=51] - price coming from inventory"><con:configuration><path>$['results'][0]['price']['min']</path><content>51</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="promocode-name" value="TEST_PROMO"/>
  <con:entry key="size" value="1000"/>
</con:parameters><con:parameterOrder><con:entry>promocode-name</con:entry><con:entry>size</con:entry><con:entry>start_date</con:entry><con:entry>end_date</con:entry><con:entry>artist_id</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="4bbf54a9-beeb-4393-bb8f-61e363c47665"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Validate - Promo_Code/{TEST_PROMO}/Dates?Start &amp; End Date &amp; Min/Max is coming from Inventory" id="75c8a1cc-0900-4e96-8105-69c97386285d"><con:settings/><con:config service="Event Engine" resourcePath="/v2.5/promo_codes/{promocode-name}/dates" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Validate - Promo_Code/{TEST_PROMO}/Dates?Start &amp; End Date &amp; Min/Max is coming from Inventory" id="0e5e2797-e0a0-4b62-87cc-ac5b7afe5202" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:originalUri>https://qa-api.msg.com/v2.5/promo_codes/default/dates</con:originalUri><con:assertion type="JsonPath Match" name="Match content of [status]" id="adb65eae-918e-4a14-87a2-f99de7d2b909"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes is 200" id="a466dd2b-21d1-4c16-9d2a-4f0317818291"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [message]" id="15d14a99-c4c6-433b-a6d6-fc013f4875d3"><con:configuration><path>$['message']</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid Result is Not Empty - > Result []" id="9c2a7760-90e5-4015-be2a-37bc86f8d9a3"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def result = jsonSlurper.results
	log.info result.size

	def totalelement = result.size
	
	//def Events_With_Arts_and_theater_Category = 0


	//category.each //Loop Through the Targeted Array Item 	
	//{
		//log.info it.name.toString()
		//def value = it.name.toString()
		//if(value.contains('Arts&amp;Theater'))
		//{
			//Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		//}
	//}


	assert totalelement != 0 : "Result is Empty Result[]"</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Because [ ID: 3C0054B70E831D67 ] Selected for this Promo-code it should return Is_promoted=true" id="32d23c1f-fa16-4de2-9e51-4b1a74ff3556"><con:configuration><path>$['results'][0]['is_promoted']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Because no price Template Applied [ ID: 3C0054B70E831D67 ] [min=51] - price coming from inventory" id="01cc3f8a-4efb-4bfb-a165-8b3862df60d6"><con:configuration><path>$['results'][0]['price']['min']</path><content>51</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="end_date" value="11092018"/>
  <con:entry key="promocode-name" value="TEST_PROMO"/>
  <con:entry key="size" value="1000"/>
  <con:entry key="artist_id" value="K8vZ9171K10"/>
  <con:entry key="start_date" value="11092018"/>
</con:parameters><con:parameterOrder><con:entry>promocode-name</con:entry><con:entry>size</con:entry><con:entry>start_date</con:entry><con:entry>end_date</con:entry><con:entry>artist_id</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Validate - Promo_Code/{TEST_PROMO}/events/{3C0054B70E831D67}/SeatMap" id="7a02c42c-e40e-4824-9fac-66dc20842e8d"><con:settings/><con:config service="Event Engine" resourcePath="/v2.5/promo_codes/{Enter-Promocode}/events/{Enter-Event-ID}/seatmap" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Validate - Promo_Code/{TEST_PROMO}/events/{3C0054B70E831D67}/SeatMap" id="83ff949f-2e05-43fc-9b8c-a1a5b4aa5425" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:originalUri>https://qa-api.msg.com/v2.5/promo_codes/TEST-PROMOCODE001/events/seat_map</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b850a28c-64af-42b0-bb9b-45d8f27da931"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid Result is Not Empty - > Result []1" id="e16d6249-fa99-4df4-927b-bd8d5079ef91"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def result = jsonSlurper.results
	log.info result.size

	def totalelement = result.size
	
	//def Events_With_Arts_and_theater_Category = 0


	//category.each //Loop Through the Targeted Array Item 	
	//{
		//log.info it.name.toString()
		//def value = it.name.toString()
		//if(value.contains('Arts&amp;Theater'))
		//{
			//Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		//}
	//}


	assert totalelement != 0 : "Result is Empty Result[]"</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c1a7300a-6de5-4134-ba7e-454298ca5924" name="No Price Template Applied. All [Promo_applicable] attribute in response should true"><con:configuration><scriptText>import groovy.json.JsonSlurper
//grab the response
def ResponseMessage = messageExchange.response.responseContent
//define a JsonSlurper
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)


def allResults= jsonSlurper.results

log.info "Total Result[] in Response : " +  allResults.size()

def is_All_Promo_Applicable_FALSE = true
def which_Result_is_Failing = "NA"
//log.info which_Result_is_Failing

//for(def i=0;i&lt;allResults.size();i++)
allResults.each
{
	//log.info it.promo_applicable.toString
	
	def value = it.toString()
	log.info value
	
	//which_Result_is_Failing = which_Result_is_Failing + 1
	//log.info which_Result_is_Failing
	
	if( !value.contains('promo_applicable=true') )
	{	
		is_All_Promo_Applicable_FALSE = false
		which_Result_is_Failing = value
		return false
	}
}

assert is_All_Promo_Applicable_FALSE == true : "All results.[Promo_Applicable=false] failed... " + which_Result_is_Failing
</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e537b08d-fbe3-4f0b-9690-bb6b3110121f" name="No Price Template Applied. [1stmez13] contains inventory min price=100 "><con:configuration><path>$['results']['1STMZ13']['min']</path><content>100</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="Enter-Event-ID" value="3C0054B70E831D67"/>
  <con:entry key="Enter-Promocode" value="TEST_PROMO"/>
</con:parameters><con:parameterOrder><con:entry>Enter-Promocode</con:entry><con:entry>Enter-Event-ID</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="manualTestStep" name=">> Update Promocode [TEST_PROMO] Add Price Template" id="2e33e1ea-a5c8-495b-b015-4bad46254688"><con:description>
Scenario : Promo-Code Without Price Template 
================================
Given I Create A Promo Code Name Test_Promo
And I  Select Any "Price TemplateD" for the Fist Time 
And I Add One Roket Event to this Promo code 
And I save the Promo Code
When I Run the  [ Validate - Promo_Code/{TEST_PROMO}/Events?size=1000Promo_Code/{TEST_PROMO}/Events?size=1000 ]  Step in Ready API 

Then I Validate that one rocket event exist in response and the "is_promoted" attribute value is true
And I Validate All Result[0] Array Contains "Price" : Empty

</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Validate - Promo_Code/{TEST_PROMO}/Events?size=1000 &amp; Min/Max is coming from Template" id="5789db89-6f62-4325-b18a-fe39ed4cbd4d"><con:settings/><con:config service="Event Engine" resourcePath="/v2.5/promo_codes/{promocode-name}/events" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Validate - Promo_Code/{TEST_PROMO}/Events?size=1000 &amp; Min/Max is coming from Template" id="87f9a1d3-b12d-4c3d-a0b5-2c2cea191b17" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer e0554a52bf12b176ae14a9f85b60fcb2" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://localhost:8088/</con:endpoint><con:request/><con:originalUri>https://qa-api.msg.com/v2.5/promo_codes/TEST-PROMOCODE001/events</con:originalUri><con:assertion type="JsonPath Match" name="Match content of [status]" id="4c37cb2a-83b9-4089-9f4a-1ab98c11d2dc"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes is 200" id="ed681a37-708e-4141-a336-561bd69154ee"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="44c8bafa-5e8b-4326-aac1-e6f89725ff4e" name="Match content of [message]"><con:configuration><path>$['message']</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid Result is Not Empty - > Result []" id="f6d778bb-0cc2-48b3-9660-2a653617330e"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def result = jsonSlurper.results
	log.info result.size

	def totalelement = result.size
	
	//def Events_With_Arts_and_theater_Category = 0


	//category.each //Loop Through the Targeted Array Item 	
	//{
		//log.info it.name.toString()
		//def value = it.name.toString()
		//if(value.contains('Arts&amp;Theater'))
		//{
			//Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		//}
	//}


	assert totalelement != 0 : "Result is Empty Result[]"</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ec793585-e67e-4abe-9e5e-0010bc2b4b31" name="Because [ ID: 3C0054B70E831D67 ] Selected for this Promo-code it should return Is_promoted=true"><con:configuration><path>$['results'][0]['is_promoted']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2b1c15cb-d0e8-4aec-b7c7-66a97dccc31f" name="Because Price Template Applied [ ID: 3C0054B70E831D67 ] [min=10] - price coming from Template"><con:configuration><path>$['results'][0]['price']['min']</path><content>10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="promocode-name" value="TEST_PROMO"/>
  <con:entry key="size" value="1000"/>
</con:parameters><con:parameterOrder><con:entry>promocode-name</con:entry><con:entry>size</con:entry><con:entry>start_date</con:entry><con:entry>end_date</con:entry><con:entry>artist_id</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="4bbf54a9-beeb-4393-bb8f-61e363c47665"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Validate - Promo_Code/{TEST_PROMO}/Dates?Start &amp; End Date &amp; Min/Max is coming from Template" id="85259c6b-5897-4f51-8fc4-7d973e15c58a"><con:settings/><con:config service="Event Engine" resourcePath="/v2.5/promo_codes/{promocode-name}/dates" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Validate - Promo_Code/{TEST_PROMO}/Dates?Start &amp; End Date &amp; Min/Max is coming from Template" id="0e5e2797-e0a0-4b62-87cc-ac5b7afe5202" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer e0554a52bf12b176ae14a9f85b60fcb2" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:originalUri>https://qa-api.msg.com/v2.5/promo_codes/default/dates</con:originalUri><con:assertion type="JsonPath Match" name="Match content of [status]" id="adb65eae-918e-4a14-87a2-f99de7d2b909"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes is 200" id="a466dd2b-21d1-4c16-9d2a-4f0317818291"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [message]" id="15d14a99-c4c6-433b-a6d6-fc013f4875d3"><con:configuration><path>$['message']</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid Result is Not Empty - > Result []" id="9c2a7760-90e5-4015-be2a-37bc86f8d9a3"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def result = jsonSlurper.results
	log.info result.size

	def totalelement = result.size
	
	//def Events_With_Arts_and_theater_Category = 0


	//category.each //Loop Through the Targeted Array Item 	
	//{
		//log.info it.name.toString()
		//def value = it.name.toString()
		//if(value.contains('Arts&amp;Theater'))
		//{
			//Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		//}
	//}


	assert totalelement != 0 : "Result is Empty Result[]"</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Because [ ID: 3C0054B70E831D67 ] Selected for this Promo-code it should return Is_promoted=true" id="32d23c1f-fa16-4de2-9e51-4b1a74ff3556"><con:configuration><path>$['results'][0]['is_promoted']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Because no price Template Applied [ ID: 3C0054B70E831D67 ] [min=51] - price coming from inventory" id="01cc3f8a-4efb-4bfb-a165-8b3862df60d6"><con:configuration><path>$['results'][0]['price']['min']</path><content>10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="end_date" value="11092018"/>
  <con:entry key="promocode-name" value="TEST_PROMO"/>
  <con:entry key="size" value="1000"/>
  <con:entry key="artist_id" value="K8vZ9171K10"/>
  <con:entry key="start_date" value="11092018"/>
</con:parameters><con:parameterOrder><con:entry>promocode-name</con:entry><con:entry>size</con:entry><con:entry>start_date</con:entry><con:entry>end_date</con:entry><con:entry>artist_id</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Validate - Promo_Code/{TEST_PROMO}/events/{3C0054B70E831D67}/SeatMap - Applied Price Template" id="d62a946d-6bf7-4c31-b72a-5155d1968944"><con:settings/><con:config service="Event Engine" resourcePath="/v2.5/promo_codes/{Enter-Promocode}/events/{Enter-Event-ID}/seatmap" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Validate - Promo_Code/{TEST_PROMO}/events/{3C0054B70E831D67}/SeatMap - Applied Price Template" id="83ff949f-2e05-43fc-9b8c-a1a5b4aa5425" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer e0554a52bf12b176ae14a9f85b60fcb2" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:originalUri>https://qa-api.msg.com/v2.5/promo_codes/TEST-PROMOCODE001/events/seat_map</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b850a28c-64af-42b0-bb9b-45d8f27da931"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid Result is Not Empty - > Result []1" id="e16d6249-fa99-4df4-927b-bd8d5079ef91"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def result = jsonSlurper.results
	log.info result.size

	def totalelement = result.size
	
	//def Events_With_Arts_and_theater_Category = 0


	//category.each //Loop Through the Targeted Array Item 	
	//{
		//log.info it.name.toString()
		//def value = it.name.toString()
		//if(value.contains('Arts&amp;Theater'))
		//{
			//Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		//}
	//}


	assert totalelement != 0 : "Result is Empty Result[]"</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e537b08d-fbe3-4f0b-9690-bb6b3110121f" name="Price Template Applied. [1stmez13] contains inventory min price=30"><con:configuration><path>$['results']['1STMZ13']['min']</path><content>30</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="Enter-Event-ID" value="3C0054B70E831D67"/>
  <con:entry key="Enter-Promocode" value="TEST_PROMO"/>
</con:parameters><con:parameterOrder><con:entry>Enter-Promocode</con:entry><con:entry>Enter-Event-ID</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="manualTestStep" name="=================" id="dd4b7aba-2e04-4f67-83a9-1d9c97adb328"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="manualTestStep" name="Update Max Price in Template to 60" id="89fb5ec0-c9e2-4c04-86f4-6fe586f87e7b"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Validate Recalculation Triggered in  Promo_Code/{Codename}/Events?Start &amp; End Date" id="e0e2ebc2-12e4-40c0-ac06-798d92d918a4"><con:settings/><con:config service="Event Engine" resourcePath="/v2.5/promo_codes/{promocode-name}/events" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Validate Recalculation Triggered in  Promo_Code/{Codename}/Events?Start &amp; End Date" id="87f9a1d3-b12d-4c3d-a0b5-2c2cea191b17" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://localhost:8088/</con:endpoint><con:request/><con:originalUri>https://qa-api.msg.com/v2.5/promo_codes/TEST-PROMOCODE001/events</con:originalUri><con:assertion type="JsonPath Match" name="Match content of [status]" id="4c37cb2a-83b9-4089-9f4a-1ab98c11d2dc"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes is 200" id="ed681a37-708e-4141-a336-561bd69154ee"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="44c8bafa-5e8b-4326-aac1-e6f89725ff4e" name="Match content of [message]"><con:configuration><path>$['message']</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid Result is Not Empty - > Result []" id="f6d778bb-0cc2-48b3-9660-2a653617330e"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def result = jsonSlurper.results
	log.info result.size

	def totalelement = result.size
	
	//def Events_With_Arts_and_theater_Category = 0


	//category.each //Loop Through the Targeted Array Item 	
	//{
		//log.info it.name.toString()
		//def value = it.name.toString()
		//if(value.contains('Arts&amp;Theater'))
		//{
			//Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		//}
	//}


	assert totalelement != 0 : "Result is Empty Result[]"</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ed204815-9421-4369-9231-339ad1a69922" name="Match content of [max]"><con:configuration><path>$['results'][0]['price']['max']</path><content>55</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="end_date" value="11092018"/>
  <con:entry key="promocode-name" value="TEST_PROMO"/>
  <con:entry key="size" value="1000"/>
  <con:entry key="artist_id" value="K8vZ9171K10"/>
  <con:entry key="start_date" value="11092018"/>
</con:parameters><con:parameterOrder><con:entry>promocode-name</con:entry><con:entry>size</con:entry><con:entry>start_date</con:entry><con:entry>end_date</con:entry><con:entry>artist_id</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="4bbf54a9-beeb-4393-bb8f-61e363c47665"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Validate Recalculation Triggered in  Promo_Code/{Codename}/Dates?Start &amp; End Date" id="2c3c9587-eceb-42ea-b955-130ca78e1f41"><con:settings/><con:config service="Event Engine" resourcePath="/v2.5/promo_codes/{promocode-name}/dates" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Validate Recalculation Triggered in  Promo_Code/{Codename}/Dates?Start &amp; End Date" id="0e5e2797-e0a0-4b62-87cc-ac5b7afe5202" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:originalUri>https://qa-api.msg.com/v2.5/promo_codes/default/dates</con:originalUri><con:assertion type="JsonPath Match" id="24ea8cb2-38e7-4677-b658-c2eb1f495001" name="Match content of [max]"><con:configuration><path>$['results'][0]['price']['max']</path><content>60</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="end_date" value="11092018"/>
  <con:entry key="promocode-name" value="TEST_PROMO"/>
  <con:entry key="size" value="1000"/>
  <con:entry key="artist_id" value="K8vZ9171K10"/>
  <con:entry key="start_date" value="11092018"/>
</con:parameters><con:parameterOrder><con:entry>promocode-name</con:entry><con:entry>size</con:entry><con:entry>start_date</con:entry><con:entry>end_date</con:entry><con:entry>artist_id</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>0090f065-e5e7-4a2c-aad4-dd891f58841f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>82301664-e2bb-44ee-b72f-dae0f1207638</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ce7664b-e551-40d5-9779-91af15b09d1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00a6c08b-5302-4337-bae6-23a3c51724c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>75c8a1cc-0900-4e96-8105-69c97386285d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e33e1ea-a5c8-495b-b015-4bad46254688</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5789db89-6f62-4325-b18a-fe39ed4cbd4d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85259c6b-5897-4f51-8fc4-7d973e15c58a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7a02c42c-e40e-4824-9fac-66dc20842e8d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d62a946d-6bf7-4c31-b72a-5155d1968944</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dd4b7aba-2e04-4f67-83a9-1d9c97adb328</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>89fb5ec0-c9e2-4c04-86f4-6fe586f87e7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>