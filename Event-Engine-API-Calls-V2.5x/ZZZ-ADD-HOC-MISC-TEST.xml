<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="45c3de8c-de03-4aae-b07e-6e4467539eda" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="ZZZ ADD HOC MISC TEST" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="45c3de8c-de03-4aae-b07e-6e4467539edafileName">ZZZ-ADD-HOC-MISC-TEST</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Copy of Return All Event" id="66320dae-b798-4ce0-8edd-2ee0a4fdf03d"><con:settings/><con:config service="Event Engine" methodName="v2_5_events_all" resourcePath="/v2.5/events" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Return All Event" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer e0554a52bf12b176ae14a9f85b60fcb2" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="18d105f8-52d8-44d1-9026-7a87a4e1dd5c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8546cb1-a42f-4a8f-9920-b7879a47e1ff" name="Match content of [status]"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid Result is Not Empty - > Result []" id="619a109e-d82d-4a1a-8236-5d3de9d41464"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def result = jsonSlurper.results
	log.info result.size

	def totalelement = result.size
	
	//def Events_With_Arts_and_theater_Category = 0


	//category.each //Loop Through the Targeted Array Item 	
	//{
		//log.info it.name.toString()
		//def value = it.name.toString()
		//if(value.contains('Arts&amp;Theater'))
		//{
			//Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		//}
	//}


	assert totalelement != 0 : "Result is Empty Result[]"</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="name" value="Billy"/>
  <con:entry key="availability_percentage" value=""/>
</con:parameters><con:parameterOrder><con:entry>artist_id</con:entry><con:entry>category</con:entry><con:entry>city</con:entry><con:entry>day_type</con:entry><con:entry>end_date</con:entry><con:entry>group</con:entry><con:entry>lat</con:entry><con:entry>long</con:entry><con:entry>min_price</con:entry><con:entry>max_price</con:entry><con:entry>name</con:entry><con:entry>promo_code</con:entry><con:entry>page</con:entry><con:entry>promotion</con:entry><con:entry>radius</con:entry><con:entry>start_date</con:entry><con:entry>sales_status</con:entry><con:entry>sales_start_date</con:entry><con:entry>sales_end_date</con:entry><con:entry>sort_by</con:entry><con:entry>size</con:entry><con:entry>sub_category</con:entry><con:entry>status</con:entry><con:entry>tag</con:entry><con:entry>unit</con:entry><con:entry>venue_id</con:entry><con:entry>venue</con:entry><con:entry>availability_percentage</con:entry><con:entry>created_after</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="4bbf54a9-beeb-4393-bb8f-61e363c47665"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Return A Event &amp; Check Response Body" id="a4dd05ca-e21d-4090-bdee-daca79afeee9"><con:settings/><con:config service="Event Engine" methodName="v2_events_id" resourcePath="/v2.5/events/{event_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Return A Event &amp; Check Response Body" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer e0554a52bf12b176ae14a9f85b60fcb2" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="d291110d-fc3d-4992-bdb6-657304d4aacd"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid Result is Not Empty - > Result []" id="a3779633-5eb5-42d6-a0dd-2a461c624137"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def result = jsonSlurper.results
	log.info result.size

	def totalelement = result.size
	
	//def Events_With_Arts_and_theater_Category = 0


	//category.each //Loop Through the Targeted Array Item 	
	//{
		//log.info it.name.toString()
		//def value = it.name.toString()
		//if(value.contains('Arts&amp;Theater'))
		//{
			//Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		//}
	//}


	assert totalelement != 0 : "Result is Empty Result[]"</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="90314d34-dc1b-4036-a352-dd43258895e0" name="Check for existence of [name]"><con:configuration><path>$['results'][0]['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f4f172e9-47c1-4f8f-98ba-e9e2377d2a64" name="Check for existence of [description]"><con:configuration><path>$['results'][0]['description']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="25d64db1-6f0c-44f0-92d2-dc6740b546df" name="Check for existence of [category]"><con:configuration><path>$['results'][0]['category']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="29de0201-63c0-477b-8d23-a9f6f3bac113" name="Match content of [host_url] using RegEx"><con:configuration><path>$['results'][0]['host_url']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>https://www.ticketmaster.*</regEx></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" name="Match content of [edp_url] using RegEx" id="1682788d-4cad-4659-84ae-3a24d32312a4"><con:configuration><path>$['results'][0]['msg_edp_url']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>https://.*msg.com.*</regEx></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" name="Match content of [start_date] using RegEx [MM/DD/YYYY]" id="6fb26f45-614e-4e4f-ac1a-333cfc63e720"><con:configuration><path>$['results'][0]['start_date']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>^(((0?[1-9]|1[012])/(0?[1-9]|1\d|2[0-8])|(0?[13456789]|1[012])/(29|30)|(0?[13578]|1[02])/31)/(19|[2-9]\d)\d{2}|0?2/29/((19|[2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00)))$</regEx></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="6fbaea7a-085b-4aa8-841a-7089bec2c289" name="Match content of [start_time] using RegEx"><con:configuration><path>$['results'][0]['start_time']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>.*:.*:.*</regEx></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="e162ffc9-b92c-4540-b48b-a80d3eeed4c4" name="Match content of [venue_id] using RegEx"><con:configuration><path>$['results'][0]['venue_id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>^([A-Za-z0-9]).*$</regEx></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="92a67da3-7a58-484f-afd1-9451c0c79a5a" name="Check for existence of [category]"><con:configuration><path>$['results'][0]['category']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d120cd42-d654-4dad-a78d-a0350373d0a7" name="Check for existence of [default_image]"><con:configuration><path>$['results'][0]['default_image']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="cf7f371b-da85-45b3-9e00-1a8c4b568dc6" name="Check for existence of [price]"><con:configuration><path>$['results'][0]['price']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="85f81ed9-485c-4e24-bc4e-8284d979f0e0" name="Match content of [min Price] using RegEx"><con:configuration><path>$['results'][0]['price']['min']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>^([0-9]).*$</regEx></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="940418a4-5b0e-4e34-8494-8057dda5cd91" name="Match content of [max price] using RegEx"><con:configuration><path>$['results'][0]['price']['max']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>^([0-9]).*$</regEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="event_id" value="0900543322738616" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="4bbf54a9-beeb-4393-bb8f-61e363c47665"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase>