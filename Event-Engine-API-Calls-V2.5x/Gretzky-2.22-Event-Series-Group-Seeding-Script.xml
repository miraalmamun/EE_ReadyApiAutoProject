<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="e3d5cdb2-90a3-4801-852f-d75d09871c84" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Gretzky 2.22 Event-Series Group Seeding Script" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="cdbe1514-bf0e-41ab-ae26-5138ed69889bfileName">Gretzky-2.22-Evnets-Status-%3D-Multiple-values</con:setting><con:setting id="e3d5cdb2-90a3-4801-852f-d75d09871c84fileName">Gretzky-2.22-Event-Series-Group-Seeding-Script</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="manualTestStep" name=">> Run the Remove Series Seeding Script" id="fec46436-fea6-42e6-9e21-cc23f4fb874b"><con:description>node migration/v2.23.0/removeAllSeriesReferences.js</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Validate All Events - > Series_ID = null" id="3f02203f-5ebc-4007-89ab-f25a742b6ae8"><con:settings/><con:config service="Event Engine" methodName="v2_5_events_all" resourcePath="/v2.5/events" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Validate All Events - > Series_ID = null" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer e0554a52bf12b176ae14a9f85b60fcb2" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="18d105f8-52d8-44d1-9026-7a87a4e1dd5c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8546cb1-a42f-4a8f-9920-b7879a47e1ff" name="Match content of [status]"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid Result is Not Empty - > Result []" id="619a109e-d82d-4a1a-8236-5d3de9d41464"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def result = jsonSlurper.results
	log.info result.size

	def totalelement = result.size
	
	//def Events_With_Arts_and_theater_Category = 0


	//category.each //Loop Through the Targeted Array Item 	
	//{
		//log.info it.name.toString()
		//def value = it.name.toString()
		//if(value.contains('Arts&amp;Theater'))
		//{
			//Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		//}
	//}


	assert totalelement != 0 : "Result is Empty Result[]"</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="size" value="1000"/>
  <con:entry key="availability_percentage" value=""/>
</con:parameters><con:parameterOrder><con:entry>artist_id</con:entry><con:entry>category</con:entry><con:entry>city</con:entry><con:entry>day_type</con:entry><con:entry>end_date</con:entry><con:entry>group</con:entry><con:entry>lat</con:entry><con:entry>long</con:entry><con:entry>min_price</con:entry><con:entry>max_price</con:entry><con:entry>name</con:entry><con:entry>promo_code</con:entry><con:entry>page</con:entry><con:entry>promotion</con:entry><con:entry>radius</con:entry><con:entry>start_date</con:entry><con:entry>sales_status</con:entry><con:entry>sales_start_date</con:entry><con:entry>sales_end_date</con:entry><con:entry>sort_by</con:entry><con:entry>size</con:entry><con:entry>sub_category</con:entry><con:entry>status</con:entry><con:entry>tag</con:entry><con:entry>unit</con:entry><con:entry>venue_id</con:entry><con:entry>venue</con:entry><con:entry>availability_percentage</con:entry><con:entry>created_after</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="4bbf54a9-beeb-4393-bb8f-61e363c47665"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="manualTestStep" name=">> Run The Create Custom Series Script" id="c3860916-d1f1-4707-86a2-c7bf9b0edf59"><con:description>node migration/v2.23.0/seedSeriesFromEDP.js &lt;filename> [ sample file in qa-Stage box /usr/tmp/edp.json]
</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Validate All Rocket Events Has Same @Series_ID [ Get it From AdminUI/Series - Search rocket series]" id="bff5bd4b-75de-4c60-93ea-c761ec750969"><con:settings/><con:config service="Event Engine" methodName="v2_5_events_all" resourcePath="/v2.5/events" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Validate All Rocket Events Has Same @Series_ID [ Get it From AdminUI/Series - Search rocket series]" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer e0554a52bf12b176ae14a9f85b60fcb2" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="18d105f8-52d8-44d1-9026-7a87a4e1dd5c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8546cb1-a42f-4a8f-9920-b7879a47e1ff" name="Match content of [status]"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid Result is Not Empty - > Result []" id="619a109e-d82d-4a1a-8236-5d3de9d41464"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def result = jsonSlurper.results
	log.info result.size

	def totalelement = result.size
	
	//def Events_With_Arts_and_theater_Category = 0


	//category.each //Loop Through the Targeted Array Item 	
	//{
		//log.info it.name.toString()
		//def value = it.name.toString()
		//if(value.contains('Arts&amp;Theater'))
		//{
			//Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		//}
	//}


	assert totalelement != 0 : "Result is Empty Result[]"</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="28360583-a5b1-4208-93ed-454d5b6b75cf" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
//grab the response
def ResponseMessage = messageExchange.response.responseContent
//define a JsonSlurper
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)


def allResults= jsonSlurper.results

log.info "Total Result[] in Response : " +  allResults.size()
log.info "Total {Series_id} found in Response : " +  allResults.count{ it.series_id }

def is_All_Rocket_SeriesId_Same = true
def which_Result_is_Failing = "NA"
//log.info which_Result_is_Failing

//for(def i=0;i&lt;allResults.size();i++)
allResults.each
{
	log.info it.series_id.toString()
	def value = it.series_id.toString()
	
	//which_Result_is_Failing = which_Result_is_Failing + 1
	//log.info which_Result_is_Failing
	
	if(!value.contains('CSH4HT4Z35TANM9VX0W5'))   //[ CSJW4YRI781HTHB842DN   we have to dynamically pickup this value ]
	{	
		is_All_Rocket_SeriesId_Same = false
		which_Result_is_Failing = it.id
		return false
	}
}

assert is_All_Rocket_SeriesId_Same == true : "Rocket Events [" + which_Result_is_Failing+" ]:  Series ID is Not Same  - Check the Response .. "

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="51741595-5749-4ef9-a39d-d0bde4b2cce4" name="Valid All Result Contains Price_Class Object"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Cut &amp; Store all results[]  array inside a variable 
def allResults= jsonSlurper.results

log.info "Total Result[] in Response : " +  allResults.size()
log.info "Total {price_class} found in Response : " +  allResults.count{ it.price_class }


assert allResults.size() == allResults.count{ it.price_class } : "{Price_class} is not found in All Result[] .. "







//def map = [user: 'mrhaki', city: 'Tilburg', age: 37]
//log.info map.count { key, value -> key.size() == 3 }


//log.info jsonSlurper.count("results")
//log.info jsonSlurper.results.count()

//log.info $['results'][*]

//premimum.each
//{
	//log.info it.toString()
	//def value = it.price_class.toString()

	//if(value.contains('start_date'))
	//{

		//StartDateFound = true
		//return false
	//}
	
//}

//assert StartDateFound == false : "Preferred Seating -> Start Date Shoule Not be part of Response "
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="size" value="1000"/>
  <con:entry key="name" value="rocket"/>
  <con:entry key="availability_percentage" value=""/>
</con:parameters><con:parameterOrder><con:entry>artist_id</con:entry><con:entry>category</con:entry><con:entry>city</con:entry><con:entry>day_type</con:entry><con:entry>end_date</con:entry><con:entry>group</con:entry><con:entry>lat</con:entry><con:entry>long</con:entry><con:entry>min_price</con:entry><con:entry>max_price</con:entry><con:entry>name</con:entry><con:entry>promo_code</con:entry><con:entry>page</con:entry><con:entry>promotion</con:entry><con:entry>radius</con:entry><con:entry>start_date</con:entry><con:entry>sales_status</con:entry><con:entry>sales_start_date</con:entry><con:entry>sales_end_date</con:entry><con:entry>sort_by</con:entry><con:entry>size</con:entry><con:entry>sub_category</con:entry><con:entry>status</con:entry><con:entry>tag</con:entry><con:entry>unit</con:entry><con:entry>venue_id</con:entry><con:entry>venue</con:entry><con:entry>availability_percentage</con:entry><con:entry>created_after</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="4bbf54a9-beeb-4393-bb8f-61e363c47665"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="77e0122f-3006-45cd-ba4e-9a9d4472d12a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="manualTestStep" name=">> Run the System Series Re-Generate Script" id="ffdc2272-3188-4a8e-9779-3c75d6da9e43"><con:description>node migration/v2_19_0/setSeriesToExistingEvents.js

And Validate System Generated Series Got Created In Admin UI</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b4c02658-f147-44e1-b5cd-c1a0e9da3def</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>377addc6-4ee8-4b83-a4db-368df64e82ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4c233bef-80d6-45fd-b76c-7985a3a59b38</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00c6fff8-3ab6-4c27-bfb2-44c6760c150e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ede50b8-f522-4889-b9a2-028d2e5f04b5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b9ea02ea-2990-4291-9f21-9de586b5d95d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fec46436-fea6-42e6-9e21-cc23f4fb874b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3860916-d1f1-4707-86a2-c7bf9b0edf59</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bff5bd4b-75de-4c60-93ea-c761ec750969</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>