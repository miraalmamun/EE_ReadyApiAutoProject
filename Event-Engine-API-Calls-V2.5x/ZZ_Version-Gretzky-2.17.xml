<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="46d7a255-ff1d-4f2e-92e8-c2280fc3c31a" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="ZZ_Version Gretzky 2.17" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="46d7a255-ff1d-4f2e-92e8-c2280fc3c31afileName">ZZ_Version-Gretzky-2.17</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="manualTestStep" name="Run Script in Server - Update &quot;Arts &amp; theater&quot;" id="610fa406-d057-45bd-a78b-2b2765c41a72"><con:description>
Connect / ssh to EE EC2 Box and run Below Scripts 
===================================
terminal : node db/seed/seed_categories.js
terminal : node migration/v2_16_0/supported_categories.js
terminal : node migration/v2_17_0/updateCategories.js

Run The Clearcache Script 
===================================
terminal : node tasks/clear_cache_script.js


Admin UI - [Add Ctegory = Arts &amp; Theater] in 2-3 Events 
=======================================
Sample Events : 
   Rain - a Tribute To the Beatles
   Billy Joel 

Edit Events and Add "Arts &amp; Theater" category
</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Scripts Runs Successfully </con:expectedResult></con:config></con:testStep><con:testStep type="restrequest" name="Event All - Look Arts &amp; Theater" id="8de68a2b-a94b-4794-a662-d8060d56a624"><con:settings/><con:config service="Event Engine" methodName="v2_5_events_all" resourcePath="/v2.5/events" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Event All - Look Arts &amp; Theater" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="18d105f8-52d8-44d1-9026-7a87a4e1dd5c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8546cb1-a42f-4a8f-9920-b7879a47e1ff" name="Match content of [status]"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - Category=&quot;Arts&amp;Theater&quot; vs Category=&quot;Arts &amp; Theater&quot; " id="c34c804e-4986-4587-a243-2b891496ea18"><con:configuration><scriptText><![CDATA[import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def category = jsonSlurper.results.category


//############# Scenario 1 : No Events Found With Category = "Arts & theater"
	
	log.info category.size
	def Events_With_Arts_and_theater_Category = 0


	category.each //Loop Through the Targeted Array Item 	
	{
		//log.info it.name.toString()
		def value = it.name.toString()
		if(value.contains('Arts&Theater'))
		{
			Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		}
	}


	assert Events_With_Arts_and_theater_Category != 0 : "No Events Found with Category=\"Arts & Theater\""





//#############  Scenario 2 : Events Found With OLD [ Category = "Arts&Theater" ] 
	def Arts_and_theater_withoutspace = true
	category.each
	{
		//log.info it.name.toString()
		def value = it.name.toString()
	
		if(value.contains('Arts & Theater'))
		{
			//log.info it.name.toString()
			Arts_and_theater_withoutspace = false;
		}
	}
	
	assert Arts_and_theater_withoutspace == true : "Category=\"Arts&Theater\" Found With  space"
]]></scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="size" value="1000"/>
  <con:entry key="availability_percentage" value=""/>
</con:parameters><con:parameterOrder><con:entry>artist_id</con:entry><con:entry>category</con:entry><con:entry>city</con:entry><con:entry>day_type</con:entry><con:entry>end_date</con:entry><con:entry>group</con:entry><con:entry>lat</con:entry><con:entry>long</con:entry><con:entry>min_price</con:entry><con:entry>max_price</con:entry><con:entry>name</con:entry><con:entry>promo_code</con:entry><con:entry>page</con:entry><con:entry>promotion</con:entry><con:entry>radius</con:entry><con:entry>start_date</con:entry><con:entry>sales_status</con:entry><con:entry>sales_start_date</con:entry><con:entry>sales_end_date</con:entry><con:entry>sort_by</con:entry><con:entry>size</con:entry><con:entry>sub_category</con:entry><con:entry>status</con:entry><con:entry>tag</con:entry><con:entry>unit</con:entry><con:entry>venue_id</con:entry><con:entry>venue</con:entry><con:entry>availability_percentage</con:entry><con:entry>created_after</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Event/EventID - Check Art &amp; Theater" id="f26a6221-1acc-487a-89fa-632da7cb9e4b"><con:settings/><con:config service="Event Engine" methodName="v2_events_id" resourcePath="/v2.5/events/{event_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Event/EventID - Check Art &amp; Theater" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="d291110d-fc3d-4992-bdb6-657304d4aacd"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="69cdce04-c24d-4a58-aeec-7e16069f3244" name="Contains Lookup ID : "><con:configuration><token>3B00531CF5ED2E8B</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5f8cefba-390b-4b09-828a-1ec48bac6b8a" name="Match Content ['category'][1]['name'] = Arts &amp; Theater"><con:configuration><path>$['results'][0]['category'][1]['name']</path><content>Arts&amp;Theater</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="event_id" value="3B00531CF5ED2E8B" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="StaticData - Check Arts &amp; Theater" id="d4f16771-f9f6-4f16-9e44-860519ff15e6"><con:settings/><con:config service="Event Engine" methodName="v2_5_static_data" resourcePath="/v2.5/static_data" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="StaticData - Check Arts &amp; Theater" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="18d105f8-52d8-44d1-9026-7a87a4e1dd5c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8546cb1-a42f-4a8f-9920-b7879a47e1ff" name="Match content of [status]"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="e7d7d016-3578-43a9-b25c-b6ba6dd545d7" name="Not Contains - Arts &amp; Theater"><con:configuration><token>Arts &amp; Theater</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7da26c2c-72ae-4fef-8ae9-c8837799446e" name="Contains  - Arts&amp;Theater"><con:configuration><token>Arts&amp;Theater</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="event_id" value="3C0052D2FFE40F9F" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Event All - Query Category = Arts &amp; Theater" id="57a978c6-0ed2-49fd-93d4-a90cc11e3454"><con:settings/><con:config service="Event Engine" methodName="v2_5_events_all" resourcePath="/v2.5/events" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Event All - Query Category = Arts &amp; Theater" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="18d105f8-52d8-44d1-9026-7a87a4e1dd5c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8546cb1-a42f-4a8f-9920-b7879a47e1ff" name="Match content of [status]"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - Category=&quot;Arts&amp;Theater&quot; vs Category=&quot;Arts &amp; Theater&quot; " id="c34c804e-4986-4587-a243-2b891496ea18"><con:configuration><scriptText><![CDATA[import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def category = jsonSlurper.results.category


//############# Scenario 1 : No Events Found With Category = "Arts & theater"
	
	//log.info category.size
	def Events_With_Arts_and_theater_Category = 0


	category.each //Loop Through the Targeted Array Item 	
	{
		//log.info it.name.toString()
		def value = it.name.toString()
		if(value.contains('Arts&Theater'))
		{
			Events_With_Arts_and_theater_Category++
			//log.info it.name.toString()
		}
	}


	assert Events_With_Arts_and_theater_Category != 0 : "No Events Found with Category=\"Arts & Theater\""





//#############  Scenario 2 : Events Found With OLD [ Category = "Arts&Theater" ] 
	def Arts_and_theater_withoutspace = false
	category.each
	{
		//log.info it.name.toString()
		def value = it.name.toString()
	
		if(value.contains('Arts&Theater'))
		{
			//log.info it.name.toString()
			Arts_and_theater_withoutspace = true;
		}
	}
	
	assert Arts_and_theater_withoutspace == true : "Category=\"Arts&Theater\" Found Without space"

]]></scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="size" value="1000"/>
  <con:entry key="availability_percentage" value=""/>
  <con:entry key="category" value="Arts&amp;Theater"/>
</con:parameters><con:parameterOrder><con:entry>artist_id</con:entry><con:entry>category</con:entry><con:entry>city</con:entry><con:entry>day_type</con:entry><con:entry>end_date</con:entry><con:entry>group</con:entry><con:entry>lat</con:entry><con:entry>long</con:entry><con:entry>min_price</con:entry><con:entry>max_price</con:entry><con:entry>name</con:entry><con:entry>promo_code</con:entry><con:entry>page</con:entry><con:entry>promotion</con:entry><con:entry>radius</con:entry><con:entry>start_date</con:entry><con:entry>sales_status</con:entry><con:entry>sales_start_date</con:entry><con:entry>sales_end_date</con:entry><con:entry>sort_by</con:entry><con:entry>size</con:entry><con:entry>sub_category</con:entry><con:entry>status</con:entry><con:entry>tag</con:entry><con:entry>unit</con:entry><con:entry>venue_id</con:entry><con:entry>venue</con:entry><con:entry>availability_percentage</con:entry><con:entry>created_after</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="manualTestStep" name="Run Script in Server - Seed Partner Venue" id="7e6b4941-d79b-4976-bd6c-e46ac1a1af6f"><con:description>
ssh to EE EC2 Box and run Below Scripts 
===================================

Step 1. Run  Below Script 
==========================
     node migration/v2_17_0/updateExistingVenueAttr.js

Step 2. Run any one of the Below Script 
=======================
     node migration/v2_17_0/seedPartnerVenues.js ''  	                  [ Note : No file name is given - this is the one last worked ]

     node migration/v2_17_0/seedPartnerVenues.js './partnerVenues.js'   [ Note : &lt;&lt; partnerVenues.js >> is a file with sample partner venue informtion we can create similar file]





Optional  - Step 3.  this was used at the First time testing.
=====================================
Mongo migration Scripts to update the mandatory fields 

db.venues.update
(
{partner:true}
,{$set:{ 'address.line1': '', "generalInfo" :

{ "generalRule" : "", "childRule" : "" }
,"location" :

{ "longitude" : "", "latitude" : "" }
,'state.code':'','boxOfficeInfo.acceptedPaymentDetail':'' }},

{multi:true}
)</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Scripts Runs Successfully </con:expectedResult></con:config></con:testStep><con:testStep type="restrequest" name="Return Venu - Default [ not using query type='&quot;]" id="b7a71656-d14b-4eb4-9c6f-fa9956f52fa8"><con:settings/><con:config service="Event Engine" resourcePath="/v2.5/venues" methodName="v2_5_venues" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return Venu - Default [ not using query type='&quot;]" id="f9b01ede-1f62-4cf8-a486-865a6eed56db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>https://dev-api.msg.com/v2/venues</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="04e860de-b05f-486d-986b-97a98cd23467" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [status:&quot;Success&quot;]" id="fdc2870e-5e21-450b-a93e-9508b61fd247"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - All Venue Result Contains &quot;Partner &quot;: False " id="a7fd53a9-be7f-4ea9-ae6e-d7daa0e74a32"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def partner = jsonSlurper.results.partner


//############# Scenario 1 : There Should NO [ "Partner" : true  ] Element Found in entire Result 
	
	log.info "Total Partner Object Found : " + partner.size
	def AllPartnerElement_Should = false  // Beccause Result contains all MSG Venue
	def truePartnerElmentFound = 0


	partner.each //Loop Through the Targeted Array Item 	
	{
		log.info it.toString()
		def value = it.toString()
		if(value.contains('true'))
		{
			AllPartnerElement_Should = true
			truePartnerElmentFound++
			//log.info it.name.toString()
		}
	}

	log.info "True Partner ElmentFound : " + truePartnerElmentFound
	
	assert AllPartnerElement_Should == false : "Query type=msg Should Not Return any Partner Venue"
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>size</con:entry><con:entry>page</con:entry><con:entry>venue_name</con:entry><con:entry>type</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return Venu - Type = all" id="1d2c3f30-ed94-40a1-b7de-e1c5b52a6cfe"><con:settings/><con:config service="Event Engine" resourcePath="/v2.5/venues" methodName="v2_5_venues" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return Venu - Type = all" id="f9b01ede-1f62-4cf8-a486-865a6eed56db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>https://dev-api.msg.com/v2/venues</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="04e860de-b05f-486d-986b-97a98cd23467" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [status:&quot;Success&quot;]" id="fdc2870e-5e21-450b-a93e-9508b61fd247"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - All Venue Result Contains minimum 1 &quot;Partner &quot;: true" id="3c822e4d-4d81-4996-a6c8-ad89c29014e6"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def partner = jsonSlurper.results.partner


//############# Scenario 1 : No Events Found With Category = "Arts &amp; theater"
	
	log.info "Total Partner Object Found : " + partner.size
	def PartnerFlagFound = false
	def HowManyPartnerVenue = 0


	partner.each //Loop Through the Targeted Array Item 	
	{
		log.info it.toString()
		def value = it.toString()
		if(value.contains('true'))
		{
			PartnerFlagFound = true
			HowManyPartnerVenue++
			//log.info it.name.toString()
		}
	}

	log.info "Total Partner Venue Found : " + HowManyPartnerVenue
	
	assert PartnerFlagFound == true : "No Partner Venue Foud in Total " + partner.size + " Venue"
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="size" value=""/>
  <con:entry key="page" value=""/>
  <con:entry key="type" value="all"/>
</con:parameters><con:parameterOrder><con:entry>size</con:entry><con:entry>page</con:entry><con:entry>venue_name</con:entry><con:entry>type</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return Venu - Type = msg" id="078e4cf1-5362-4530-b135-2686670b2631"><con:settings/><con:config service="Event Engine" resourcePath="/v2.5/venues" methodName="v2_5_venues" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return Venu - Type = msg" id="f9b01ede-1f62-4cf8-a486-865a6eed56db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>https://dev-api.msg.com/v2/venues</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="04e860de-b05f-486d-986b-97a98cd23467" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [status:&quot;Success&quot;]" id="fdc2870e-5e21-450b-a93e-9508b61fd247"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - All Venue Result Contains &quot;Partner &quot;: False " id="c661a4c7-498a-4912-8564-7f3d871d3182"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def partner = jsonSlurper.results.partner


//############# Scenario 1 : There Should NO [ "Partner" : true  ] Element Found in entire Result 
	
	log.info "Total Partner Object Found : " + partner.size
	def AllPartnerElement_Should = false  // Beccause Result contains all MSG Venue
	def truePartnerElmentFound = 0


	partner.each //Loop Through the Targeted Array Item 	
	{
		log.info it.toString()
		def value = it.toString()
		if(value.contains('true'))
		{
			AllPartnerElement_Should = true
			truePartnerElmentFound++
			//log.info it.name.toString()
		}
	}

	log.info "True Partner ElmentFound : " + truePartnerElmentFound
	
	assert AllPartnerElement_Should == false : "Query type=msg Should Not Return any Partner Venue"
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="size" value=""/>
  <con:entry key="page" value=""/>
  <con:entry key="type" value="msg"/>
</con:parameters><con:parameterOrder><con:entry>size</con:entry><con:entry>page</con:entry><con:entry>venue_name</con:entry><con:entry>type</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Return Venu - Type = partner" id="c2efd20c-01be-4b42-b50e-2fe331a9c024"><con:settings/><con:config service="Event Engine" resourcePath="/v2.5/venues" methodName="v2_5_venues" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Return Venu - Type = partner" id="f9b01ede-1f62-4cf8-a486-865a6eed56db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>https://dev-api.msg.com/v2/venues</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="04e860de-b05f-486d-986b-97a98cd23467" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [status:&quot;Success&quot;]" id="fdc2870e-5e21-450b-a93e-9508b61fd247"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - All Venue Result Contains &quot;Partner &quot;: true " id="d3dc3683-a2bf-4fb5-9e30-206ea7149325"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def partner = jsonSlurper.results.partner


//############# Scenario 1 : There Should NO [ "Partner" : false  ] Element Found in entire Result set
	
	log.info "Total Partner Venue Found : " + partner.size
	def AllPartnerElement_Should = true  // Beccause Result contains all Partner Venue
	def falsePartnerElmentFound = 0


	partner.each //Loop Through the Targeted Array Item 	
	{
		log.info it.toString()
		def value = it.toString()
		if(value.contains('false'))
		{
			AllPartnerElement_Should = false
			falsePartnerElmentFound++
			//log.info it.name.toString()
		}
	}

	log.info "False  Partner ElmentFound : " + falsePartnerElmentFound
	
	assert AllPartnerElement_Should == true : "Query type=partner Should Not Return any MSG Venue"
</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b3b2d0f-2721-4e7b-8913-e261d75e3275" name="Check for existence of [id]"><con:configuration><path>$['results'][0]['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b0c3ef16-47c5-4077-9046-27c169dd8f8b" name="Check for existence of [city]"><con:configuration><path>$['results'][0]['city']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e70b8d0b-ade1-4529-b204-8da39bf08cc6" name="Check for existence of [logo_url]"><con:configuration><path>$['results'][0]['logo_url']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32bfcd21-3e36-4f3f-b5d8-48e85225946c" name="Check for existence of [legalCopy]"><con:configuration><path>$['results'][0]['legalCopy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="size" value=""/>
  <con:entry key="type" value="partner"/>
</con:parameters><con:parameterOrder><con:entry>size</con:entry><con:entry>page</con:entry><con:entry>venue_name</con:entry><con:entry>type</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="manualTestStep" name="Run Script in Server - Create Events Happening in Partner Venue netflix" id="b03c3a8f-8f53-4f8b-849f-93023b0f309c"><con:description>
Connect / ssh to EE EC2 Box and run Below Scripts 
===================================

Important Step	: Get The &lt;&lt;netflix Partner Venue ID>> From previous Test_Step [ Return Venu - Type = partner]

terminal	: node migration/v2_17_0/seedPartnerEvents.js &lt;&lt;netflix Partner Venue ID>>   -- > [PVCUXCXLMPHHF] Last Used In staging

	  node migration/v2_17_0/seedPartnerEvents.js 'filename'  &lt;VenueID> [ Note : Sample File Format (partnerEvents.js)

	  node migration/v2_17_0/seedPartnerEvents.js '' PVCUXCXLMPHHF 

	  node migration/v2_17_0/seedPartnerEvents.js './partnerEvents_1' PVVYZWCWBORKO 

**** Mongo Script to add new artist ****
db.artists.insert({"url" : "", "locale" : "en-us", "images" : [
{ "url" : "https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Judd_Apatow_2012_Shankbone.JPG/440px-Judd_Apatow_2012_Shankbone.JPG" }
], "classifications" : [ { "segment" :

{ "name" : "Film", "id" : "KZFzniwnSyZfZ7v7nn" }
, "genre" :

{ "name" : "Comedy", "id" : "KnvZfZ7vAkA" }
, "type" : "", "subGenre" :

{ "name" : "Comedy", "id" : "KZazBEonSMnZfZ7vFlJ" }
, "subType" : "" } ], "name" : "Judd Apatow", "id" : "CADPH1B0MK1"})</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Scripts Runs Successfully </con:expectedResult></con:config></con:testStep><con:testStep type="restrequest" name="Get The Partner Venue Event (Event/venue_id = {netflixID})" id="69a3975b-d479-43d3-bed9-45041f765476"><con:settings/><con:config service="Event Engine" methodName="v2_5_events_all" resourcePath="/v2.5/events" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get The Partner Venue Event (Event/venue_id = {netflixID})" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="18d105f8-52d8-44d1-9026-7a87a4e1dd5c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8546cb1-a42f-4a8f-9920-b7879a47e1ff" name="Match content of [status]"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Partner Name Is in Response" id="0e8a064c-aeec-42f0-bdae-b4b97487e019"><con:configuration><path>$['results'][0]['partnership_info']['name']</path><content>Netflix</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Logo URL Is in Response" id="fddd091f-7a1e-4ac9-b3ec-945700ad6d0e"><con:configuration><path>$['results'][0]['partnership_info']['logo_url']</path><content>https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e3513d8e-adbe-4751-9172-a7c2c50ca4ad" name="Legal Copy Is in Response"><con:configuration><path>$['results'][0]['partnership_info']['legalCopy']</path><content>Welcome to Netflix! We are a subscription service that provides our members with access to motion pictures, television and other audio-visual entertainment ("Netflix content") streamed over the Internet to certain Internet-connected TV's, computers and other devices ("Netflix ready devices").</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1f177bf4-d881-46fa-800f-acb47fdc1c80" name="Source Type"><con:configuration><path>$['results'][0]['source']</path><content>PARTNER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="availability_percentage" value=""/>
  <con:entry key="venue_id" value="PVCUXCXLMPHHF"/>
</con:parameters><con:parameterOrder><con:entry>artist_id</con:entry><con:entry>category</con:entry><con:entry>city</con:entry><con:entry>day_type</con:entry><con:entry>end_date</con:entry><con:entry>group</con:entry><con:entry>lat</con:entry><con:entry>long</con:entry><con:entry>min_price</con:entry><con:entry>max_price</con:entry><con:entry>name</con:entry><con:entry>promo_code</con:entry><con:entry>page</con:entry><con:entry>promotion</con:entry><con:entry>radius</con:entry><con:entry>start_date</con:entry><con:entry>sales_status</con:entry><con:entry>sales_start_date</con:entry><con:entry>sales_end_date</con:entry><con:entry>sort_by</con:entry><con:entry>size</con:entry><con:entry>sub_category</con:entry><con:entry>status</con:entry><con:entry>tag</con:entry><con:entry>unit</con:entry><con:entry>venue_id</con:entry><con:entry>venue</con:entry><con:entry>availability_percentage</con:entry><con:entry>created_after</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Search The Partner Venue(Netflix) Event inside All Events" id="ae0ec9b0-7370-4a56-a028-a73c51caeaed"><con:settings/><con:config service="Event Engine" methodName="v2_5_events_all" resourcePath="/v2.5/events" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Search The Partner Venue(Netflix) Event inside All Events" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="18d105f8-52d8-44d1-9026-7a87a4e1dd5c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8546cb1-a42f-4a8f-9920-b7879a47e1ff" name="Match content of [status]"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - Looking Partner Venue Events in All Event Collection" id="fd972781-b67d-4fc9-b53d-9a293535ccc7"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def partnerName = jsonSlurper.results.partnership_info.name.toString()
	def partneURL = jsonSlurper.results.partnership_info.logo_url.toString()
	def partnerLegalCopy = jsonSlurper.results.partnership_info.legalCopy.toString()
	//def partnerLegalCopy = "Welcome to Netflix! We are a subscription service that provides our members with access to motion pictures, television and other audio-visual entertainment (\"Netflix content\") streamed over the Internet to certain Internet-connected TV's, computers and other devices (\"Netflix ready devices\")."


	log.info partnerName
	log.info partneURL
	log.info partnerLegalCopy
	
	def isFail = false
	def fildescription

	if(!partnerName.contains('Netflix'))
	{
		isFail = true
		fildescription = "Partner Venue Name Not Found"
	}

	else if(!partneURL.contains('Netflix_2015_logo.svg'))
	{
		isFail = true
		fildescription = "Partner Venue URL Not Found"
	}


	else if(!partnerLegalCopy.contains('Welcome to Netflix'))
	{
		isFail = true
		fildescription = "Partner Venue Legal Copy  Not Found"
	}


	assert isFail == false : fildescription

</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="size" value="1000"/>
  <con:entry key="availability_percentage" value=""/>
</con:parameters><con:parameterOrder><con:entry>artist_id</con:entry><con:entry>category</con:entry><con:entry>city</con:entry><con:entry>day_type</con:entry><con:entry>end_date</con:entry><con:entry>group</con:entry><con:entry>lat</con:entry><con:entry>long</con:entry><con:entry>min_price</con:entry><con:entry>max_price</con:entry><con:entry>name</con:entry><con:entry>promo_code</con:entry><con:entry>page</con:entry><con:entry>promotion</con:entry><con:entry>radius</con:entry><con:entry>start_date</con:entry><con:entry>sales_status</con:entry><con:entry>sales_start_date</con:entry><con:entry>sales_end_date</con:entry><con:entry>sort_by</con:entry><con:entry>size</con:entry><con:entry>sub_category</con:entry><con:entry>status</con:entry><con:entry>tag</con:entry><con:entry>unit</con:entry><con:entry>venue_id</con:entry><con:entry>venue</con:entry><con:entry>availability_percentage</con:entry><con:entry>created_after</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Filter All Events With &quot;City = new york&quot; [will also display Partner Events Because thats Event's city =&quot;anywhere&quot; ]" id="ba3fe280-6fcb-4b74-859f-bdb8f43f2542"><con:settings/><con:config service="Event Engine" methodName="v2_5_events_all" resourcePath="/v2.5/events" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Filter All Events With &quot;City = new york&quot; [will also display Partner Events Because thats Event's city =&quot;anywhere&quot; ]" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="18d105f8-52d8-44d1-9026-7a87a4e1dd5c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8546cb1-a42f-4a8f-9920-b7879a47e1ff" name="Match content of [status]"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - All Venue Result Contains &quot;Partner &quot;: true " id="fd972781-b67d-4fc9-b53d-9a293535ccc7"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def partnerName = jsonSlurper.results.partnership_info.name.toString()
	def partneURL = jsonSlurper.results.partnership_info.logo_url.toString()
	def partnerLegalCopy = jsonSlurper.results.partnership_info.legalCopy.toString()
	//def partnerLegalCopy = "Welcome to Netflix! We are a subscription service that provides our members with access to motion pictures, television and other audio-visual entertainment (\"Netflix content\") streamed over the Internet to certain Internet-connected TV's, computers and other devices (\"Netflix ready devices\")."


	log.info partnerName
	log.info partneURL
	log.info partnerLegalCopy
	
	def isFail = false
	def fildescription

	if(!partnerName.contains('Netflix'))
	{
		isFail = true
		fildescription = "Partner Venue Name Not Found"
	}

	else if(!partneURL.contains('Netflix_2015_logo.svg'))
	{
		isFail = true
		fildescription = "Partner Venue URL Not Found"
	}


	else if(!partnerLegalCopy.contains('Welcome to Netflix'))
	{
		isFail = true
		fildescription = "Partner Venue Legal Copy  Not Found"
	}


	assert isFail == false : fildescription

</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="size" value="190"/>
  <con:entry key="city" value="new york"/>
  <con:entry key="availability_percentage" value=""/>
</con:parameters><con:parameterOrder><con:entry>artist_id</con:entry><con:entry>category</con:entry><con:entry>city</con:entry><con:entry>day_type</con:entry><con:entry>end_date</con:entry><con:entry>group</con:entry><con:entry>lat</con:entry><con:entry>long</con:entry><con:entry>min_price</con:entry><con:entry>max_price</con:entry><con:entry>name</con:entry><con:entry>promo_code</con:entry><con:entry>page</con:entry><con:entry>promotion</con:entry><con:entry>radius</con:entry><con:entry>start_date</con:entry><con:entry>sales_status</con:entry><con:entry>sales_start_date</con:entry><con:entry>sales_end_date</con:entry><con:entry>sort_by</con:entry><con:entry>size</con:entry><con:entry>sub_category</con:entry><con:entry>status</con:entry><con:entry>tag</con:entry><con:entry>unit</con:entry><con:entry>venue_id</con:entry><con:entry>venue</con:entry><con:entry>availability_percentage</con:entry><con:entry>created_after</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Filter Events with &quot;City = Anywhere&quot; [ Should Return only partner venue events]" id="9b6fe397-72d7-42bd-80b0-b5940383e9fd"><con:settings/><con:config service="Event Engine" methodName="v2_5_events_all" resourcePath="/v2.5/events" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Filter Events with &quot;City = Anywhere&quot; [ Should Return only partner venue events]" id="4097ce26-7750-45c6-bf2a-1d076bedb577" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer cd9a70efa41013af89909eb70fb4d528" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>http://qa-api.msg.com/v2.5/events</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="18d105f8-52d8-44d1-9026-7a87a4e1dd5c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8546cb1-a42f-4a8f-9920-b7879a47e1ff" name="Match content of [status]"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - All Venue Result Contains &quot;Partner &quot;: true " id="fd972781-b67d-4fc9-b53d-9a293535ccc7"><con:configuration><scriptText>import groovy.json.JsonSlurper

//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)

//Get A Targeted Array Item from Response 
	def partnerName = jsonSlurper.results.partnership_info.name.toString()
	def partneURL = jsonSlurper.results.partnership_info.logo_url.toString()
	def partnerLegalCopy = jsonSlurper.results.partnership_info.legalCopy.toString()
	//def partnerLegalCopy = "Welcome to Netflix! We are a subscription service that provides our members with access to motion pictures, television and other audio-visual entertainment (\"Netflix content\") streamed over the Internet to certain Internet-connected TV's, computers and other devices (\"Netflix ready devices\")."


	log.info partnerName
	log.info partneURL
	log.info partnerLegalCopy
	
	def isFail = false
	def fildescription

	if(!partnerName.contains('Netflix'))
	{
		isFail = true
		fildescription = "Partner Venue Name Not Found"
	}

	else if(!partneURL.contains('Netflix_2015_logo.svg'))
	{
		isFail = true
		fildescription = "Partner Venue URL Not Found"
	}


	else if(!partnerLegalCopy.contains('Welcome to Netflix'))
	{
		isFail = true
		fildescription = "Partner Venue Legal Copy  Not Found"
	}


	assert isFail == false : fildescription</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Only event with City = Anywhere" id="181b6adf-83c0-4d62-8a1a-cbef74571ea9"><con:configuration><scriptText>import groovy.json.JsonSlurper


//grab the response
	def ResponseMessage = messageExchange.response.responseContent

//define a JsonSlurper
	def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)


//===== Scenario 2  we should not see any other city 

def cities = jsonSlurper.results.city
def OtherCityFound = false
def fildescription
cities.each //Loop Through the Targeted Array Item 	
{
	log.info it.toString()
	def value = it.toString()
	if(value.contains('New York') || value.contains('Chicago') || value.contains('Inglewood'))
	{
		OtherCityFound = true
		fildescription = "Filtered For City = Anywhere But Other City Found"
		//log.info it.name.toString()
	}
}

assert OtherCityFound == false : fildescription
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="city" value="anywhere"/>
  <con:entry key="availability_percentage" value=""/>
</con:parameters><con:parameterOrder><con:entry>artist_id</con:entry><con:entry>category</con:entry><con:entry>city</con:entry><con:entry>day_type</con:entry><con:entry>end_date</con:entry><con:entry>group</con:entry><con:entry>lat</con:entry><con:entry>long</con:entry><con:entry>min_price</con:entry><con:entry>max_price</con:entry><con:entry>name</con:entry><con:entry>promo_code</con:entry><con:entry>page</con:entry><con:entry>promotion</con:entry><con:entry>radius</con:entry><con:entry>start_date</con:entry><con:entry>sales_status</con:entry><con:entry>sales_start_date</con:entry><con:entry>sales_end_date</con:entry><con:entry>sort_by</con:entry><con:entry>size</con:entry><con:entry>sub_category</con:entry><con:entry>status</con:entry><con:entry>tag</con:entry><con:entry>unit</con:entry><con:entry>venue_id</con:entry><con:entry>venue</con:entry><con:entry>availability_percentage</con:entry><con:entry>created_after</con:entry></con:parameterOrder><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:testStep type="manualTestStep" name="Admin UI Add an Artist" id="822a4f7d-e0f4-467d-b60b-b0be61f8c719"><con:description>Login To Admin UI 
Select an Event and Go to Event Details Page 
Add an Artist with name "MR Rachit" 

Check all the mandatory Field while adding artist </con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Get All the Artist/ArtistName" id="cbe69cc7-a793-4812-8f74-b2e3d67aebf5"><con:settings/><con:config service="Event Engine" resourcePath="/v2/artists" methodName="v2_artists" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get All the Artist/ArtistName" id="ae7f1f85-d52d-4c33-a8fa-956d510d53db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer vee two point fiiiiiiive yo" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-api.msg.com</con:endpoint><con:request/><con:originalUri>https://dev-api.msg.com/v2/artists</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b1e8b89e-921c-49f0-99f2-38a5ab094bd3" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [status]" id="e40199f7-7349-4d5c-b66e-997e3b4a1a97"><con:configuration><path>$['status']</path><content>Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6c49fa85-d795-4d5e-9419-f5c71ecb6841" name="Validte Artist Added In Admin UI Found "><con:configuration><path>$['results'][0]['name']</path><content>Mr Rachit</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="artist_name" value="Mr Rachit" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:environmentSpec><con:entry environmentId="0cc57d55-fe2d-4aed-9711-a070dae089cb"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1a094b1f-40e4-4c2f-9161-6d62005e215a"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="b695a608-4e04-4152-856c-6fc46423d14e"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="91bc2533-d754-4ed7-8bcb-6d204390b2af"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="9aceb8bd-5bce-4527-ba8b-5116011b2c2e"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="2f76bc83-fd85-49f5-9bce-1261dc2b8119"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2f3aa2fe-e2c5-41f6-a34e-040213a1f4e4"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>f26a6221-1acc-487a-89fa-632da7cb9e4b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8de68a2b-a94b-4794-a662-d8060d56a624</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7e6b4941-d79b-4976-bd6c-e46ac1a1af6f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b7a71656-d14b-4eb4-9c6f-fa9956f52fa8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b03c3a8f-8f53-4f8b-849f-93023b0f309c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>822a4f7d-e0f4-467d-b60b-b0be61f8c719</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>